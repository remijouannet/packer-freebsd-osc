#!/bin/sh
#
# $FreeBSD: releng/12.0/libexec/rc.d/getsshkey 298514 2016-04-23 16:10:54Z lme $
#
# PROVIDE: getsshkey
# REQUIRE: LOGIN FILESYSTEMS NETWORKING
# BEFORE: sshd

. /etc/rc.subr

name="getsshkey"
desc="getssh key from outscale metadata"
rcvar="getsshkey_enable"
start_cmd="getsshkey_start"
stop_cmd=":"

getsshkey_start()
{

	for i in 1 2 3 4 5 6 7 8 9; do
		/usr/bin/fetch -T 1 -o - http://169.254.169.254/ && break
		sleep 1;
	done

	if [ $(hostname -s) == "freebsd" ]; then
		/bin/hostname $(/usr/bin/fetch -T 2 -q -o - http://169.254.169.254/latest/meta-data/hostname)
	fi

	if [ ! -d /root/.ssh ] ; then
		mkdir -p /root/.ssh
		chmod 700 /root/.ssh
	fi

	# Fetch public key using HTTP at each boot
	touch /root/.ssh/authorized_keys
	my_key=$(/usr/bin/fetch -T 2 -q -o - http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key)

	if [ $? -eq 0 ] ; then
		# Only append the key if it not already exists in authorized_keys file
		grep -q "$my_key" /root/.ssh/authorized_keys
		if [ $? -eq 1 ] ; then
			echo "$my_key" >> /root/.ssh/authorized_keys
			chmod 600 /root/.ssh/authorized_keys
		fi
	fi

	# Exit if we have already run on this instance (e.g., previous boot).
	been_run_file="/var/osc/$name.$(/usr/bin/fetch -T 2 -q -o - http://169.254.169.254/latest/meta-data/ami-id)"
	mkdir -p $(dirname $been_run_file)
	if [ -f $been_run_file ]; then
		logger -st $name < $been_run_file
		return 0
	fi

	# Don't run again on this instance
	echo "$name has already been run on this instance" > $been_run_file
    return 0
}

load_rc_config $name
run_rc_command "$1"
